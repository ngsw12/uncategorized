# Python の FizzBuzzの解法で一番コード記述の少ないとされるもの。およびそれに使用されている演算子のメモ

for i in range(100):print(i%3//2*"Fizz"+i%5//4*"Buzz"or-~i)

"""
### for i in range(100):

⇒ for文、i が0˜100までの間処理を繰り返し

### print()

⇒ 出力

### i % 3

% : あまり

⇒ i を3 で割った余り

0 % 3 → 0

1 % 3 → 1

2 % 3 → 2

3 % 3 → 0

:

### i % 3 // 2

// : 切り捨て除算 (余りは切り捨て)

⇒ i % 3 を2で割る

i % 3 が2になる時(= 3の倍数の時) 1になる

### i%3//2 * "Fizz"

0のときは"Fizz"が表示されない

1のときは"Fizz"が表示

### i % 5 // 4 * "Buzz"

i%3//2*"Fizz"と同様

3の倍数かつ5の倍数のときのみ"Fizz" + "Buzz"でFizzBuzzと表示される

### or

ブール演算子(or)

第一引数がFalseのときのみ第荷引数を評価(≒False優先)

第一引数(i%3//2*"Fizz"+i%5//4*"Buzz")がFalse(0)の場合のみ第二引数(-˜i)

### -˜i

"˜" (チルダ) : 単項演算子 (反転)

整数引数をビット単位反転したものを与える。

x のビット単位反転は、-(x+1)として定義されている。

この演算子は整数にのみ適用される

i が0 の時 → ˜i : -1,

i が1の時 → ˜i : -2,

:

-(˜i)なので1, 2, 3, 4, 5 ... となる
"""